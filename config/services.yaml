parameters:

services:

    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            # bind processwire to the constructor variable $processWire to get injected if a service needs it
            $processWire: '@processwire'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    Symprowire\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Symprowire.php'
            - '../src/Tests/'

    # register processwire as synthetic service which will be injected in our Kernel on container construction
    processwire:
        synthetic: true
    # register our custom route loader to build a routecollection based on the Page Template
    Symprowire\Engine\SymprowireRouteLoader:
        tags: [ routing.loader ]
